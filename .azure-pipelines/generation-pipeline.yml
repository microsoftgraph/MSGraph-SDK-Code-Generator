# Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
# contains an end to end validation pipeline using C# compilation tests for staging beta metadata

trigger: none
pr: none
schedules:
- cron: '0 10 * * TUE'
  displayName: Tuesday generation (PST 2am, EST 5am, EAT 3pm)
  branches:
    include:
    - main
  always: true

resources:
 repositories:
   - repository: msgraph-sdk-dotnet
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-sdk-dotnet
     ref: master
   - repository: msgraph-beta-sdk-dotnet
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-beta-sdk-dotnet
     ref: master
   - repository: msgraph-sdk-php
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-sdk-php
     ref: main
   - repository: msgraph-beta-sdk-php
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-beta-sdk-php
     ref: main
   - repository: msgraph-typescript-typings
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-typescript-typings
     ref: main
   - repository: msgraph-beta-typescript-typings
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-beta-typescript-typings
     ref: main
   - repository: msgraph-sdk-objc-models
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-sdk-objc-models
     ref: dev
   - repository: msgraph-sdk-java
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-sdk-java
     ref: dev
   - repository: msgraph-beta-sdk-java
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-beta-sdk-java
     ref: dev
   - repository: msgraph-sdk-go
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-sdk-go
     ref: main
   - repository: msgraph-beta-sdk-go
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-beta-sdk-go
     ref: main
   - repository: msgraph-sdk-ruby
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-sdk-ruby
     ref: main
   - repository: msgraph-beta-sdk-ruby
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-beta-sdk-ruby
     ref: main
   - repository: msgraph-sdk-typescript
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-sdk-typescript
     ref: dev
   - repository: msgraph-beta-sdk-typescript
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-beta-sdk-typescript
     ref: main
   - repository: msgraph-sdk-python
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-sdk-python
     ref: main
   - repository: msgraph-beta-sdk-python
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-beta-sdk-python
     ref: main
   - repository: msgraph-cli
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-cli
     ref: main
   - repository: msgraph-beta-cli
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-beta-cli
     ref: main
   - repository: msgraph-metadata
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/msgraph-metadata
   - repository: microsoft-graph-docs
     type: github
     endpoint: microsoftgraph (22)
     name: microsoftgraph/microsoft-graph-docs
   - repository: kiota
     type: github
     endpoint: microsoftkiota
     name: microsoft/kiota

pool: 1es-ubuntu-latest

parameters:
  - name: v1BranchPrefix
    default: v1.0/pipelinebuild
    displayName: V1 Branch Prefix

  - name: betaBranchPrefix
    default: beta/pipelinebuild
    displayName: Beta Branch Prefix (should be different than V1)

  - name: skipMetadataCaptureAndClean
    default: false
    displayName: Skip metadata capture and clean
    type: boolean

  - name: skipOpenApiCaptureAndClean
    default: false
    displayName: Skip OpenAPI capture and clean
    type: boolean

  - name: publishChanges
    default: true
    type: boolean
    displayName: Publish changes?

  - name: overrideSkipCI
    default: false
    type: boolean
    displayName: Override [skip ci]? Checking this box will generate the SDK PRs

variables:
  buildConfiguration: 'Release'
  cleanMetadataFileBeta: '$(Build.SourcesDirectory)/msgraph-metadata/clean_beta_metadata/cleanMetadataWithDescriptionsbeta.xml'
  cleanMetadataFileV1: '$(Build.SourcesDirectory)/msgraph-metadata/clean_v10_metadata/cleanMetadataWithDescriptionsv1.0.xml'
  cleanMetadataFileWithAnnotationsV1: '$(Build.SourcesDirectory)/msgraph-metadata/clean_v10_metadata/cleanMetadataWithDescriptionsAndAnnotationsv1.0.xml'
  cleanMetadataFileWithAnnotationsBeta: '$(Build.SourcesDirectory)/msgraph-metadata/clean_beta_metadata/cleanMetadataWithDescriptionsAndAnnotationsbeta.xml'
  cleanOpenAPIFileV1: '$(Build.SourcesDirectory)/msgraph-metadata/openapi/v1.0/openapi.yml'
  cleanOpenAPIFileBeta: '$(Build.SourcesDirectory)/msgraph-metadata/openapi/beta/openapi.yml'
  cleanOpenAPIFileV1OutputPath: '$(Build.SourcesDirectory)/msgraph-metadata/openapi/v1.0/'
  cleanOpenAPIFileBetaOutputPath: '$(Build.SourcesDirectory)/msgraph-metadata/openapi/beta/'
  cleanMetadataFileV1OutputPath: '$(Build.SourcesDirectory)/msgraph-metadata/clean_v10_metadata/'
  cleanMetadataFileBetaOutputPath: '$(Build.SourcesDirectory)/msgraph-metadata/clean_beta_metadata/'
  cleanMetadataFolderBeta: 'clean_beta_metadata'
  cleanMetadataFolderV1: 'clean_v10_metadata'
  cleanOpenAPIFolderBeta: 'clean_beta_openapi'
  cleanOpenAPIFolderV1: 'clean_v10_openapi'
  rawMetadataFileBeta: '$(Build.SourcesDirectory)/msgraph-metadata/schemas/beta-Prod.csdl'
  rawMetadataFileV1: '$(Build.SourcesDirectory)/msgraph-metadata/schemas/v1.0-Prod.csdl'
  typewriterDirectory: '$(Build.SourcesDirectory)/typewriter'
  kiotaDirectory: '$(Build.SourcesDirectory)/kiota'
  typewriterExecutable: '$(typewriterDirectory)/Typewriter'
  scriptsDirectory: '$(Build.SourcesDirectory)/MSGraph-SDK-Code-Generator/scripts'
  conversionSettingsDirectory: '$(Build.SourcesDirectory)/msgraph-metadata/conversion-settings'
  transformScript: '$(Build.SourcesDirectory)/msgraph-metadata/transforms/csdl/preprocess_csdl.xsl'
  docsDirectory: '$(Build.SourcesDirectory)/microsoft-graph-docs'

  v1Branch: ${{ parameters.v1BranchPrefix }}/$(Build.BuildId)
  betaBranch: ${{ parameters.betaBranchPrefix }}/$(Build.BuildId)

  publishChanges: ${{ parameters.publishChanges }}
  overrideSkipCI: ${{ parameters.overrideSkipCI }}
  skipMetadataCaptureAndClean: ${{ parameters.skipMetadataCaptureAndClean }}
  skipOpenApiCaptureAndClean: ${{ parameters.skipOpenApiCaptureAndClean }}
  phpVersion: 7.2

# This stage is the core dependency for all other stages.
stages:
- stage: stage_build_and_publish_typewriter
  dependsOn: [] # remove the implicit dependency to any previous stage
  jobs:
  - job: build_and_publish_typewriter
    steps:
    - template: generation-templates/build-and-publish-typewriter.yml

- stage: stage_build_and_publish_kiota
  dependsOn: [] # remove the implicit dependency to any previous stage
  jobs:
  - job: build_and_publish_kiota
    steps:
    - template: generation-templates/build-and-publish-kiota.yml

# Downloads the latest public beta metadata. If there are changes, we checkin
# the public metadata into microsoftgraph/msgraph-metadata, and then run the
# metadata through the cleaning and documentation processes before validating
# the results with generated and built .NET code files as a smoke test.
- stage: stage_v1_metadata
  dependsOn: stage_build_and_publish_typewriter
  condition: |
    and(succeeded('stage_build_and_publish_typewriter'),
        eq( ${{ parameters.skipMetadataCaptureAndClean }}, false))
  jobs:
  - job: v1_metadata
    steps:
    - template: generation-templates/capture-metadata.yml
      parameters:
        endpoint: 'v1.0'
        inputMetadata: $(rawMetadataFileV1)
        outputPath: $(cleanMetadataFileV1OutputPath)
        cleanMetadataFile: $(cleanMetadataFileV1)
        cleanMetadataFolder: $(cleanMetadataFolderV1)
        cleanMetadataFileWithAnnotations: $(cleanMetadataFileWithAnnotationsV1)

# Same description as stage_v1_metadata
- stage: stage_beta_metadata
  dependsOn: stage_build_and_publish_typewriter
  condition: |
    and(succeeded('stage_build_and_publish_typewriter'),
        eq( ${{ parameters.skipMetadataCaptureAndClean }}, false))
  jobs:
  - job: beta_metadata
    steps:
    - template: generation-templates/capture-metadata.yml
      parameters:
        endpoint: 'beta'
        inputMetadata: $(rawMetadataFileBeta)
        outputPath: $(cleanMetadataFileBetaOutputPath)
        cleanMetadataFile: $(cleanMetadataFileBeta)
        cleanMetadataFolder: $(cleanMetadataFolderBeta)
        cleanMetadataFileWithAnnotations: $(cleanMetadataFileWithAnnotationsBeta)

- stage: stage_v1_openapi
  dependsOn: stage_v1_metadata
  condition: and(in(dependencies.stage_v1_metadata.result, 'Succeeded', 'Skipped'), eq( ${{ parameters.skipOpenApiCaptureAndClean }}, false))
  jobs:
  - template: generation-templates/capture-openapi.yml
    parameters:
      endpoint: 'v1.0'
      outputPath: $(cleanOpenAPIFileV1OutputPath)
      cleanMetadataFolder: $(cleanOpenAPIFolderV1)

- stage: stage_beta_openapi
  dependsOn: stage_beta_metadata
  condition: and(in(dependencies.stage_beta_metadata.result, 'Succeeded', 'Skipped'), eq( ${{ parameters.skipOpenApiCaptureAndClean }}, false))
  jobs:
  - template: generation-templates/capture-openapi.yml
    parameters:
      endpoint: 'beta'
      outputPath: $(cleanOpenAPIFileBetaOutputPath)
      cleanMetadataFolder: $(cleanOpenAPIFolderBeta)

- stage: stage_csharp_v1_kiota
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_v1_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_v1_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: csharp_v1_kiota
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'csharp'
        version: ''
        repoName: 'msgraph-sdk-dotnet'
        baseBranchName : 'dev'
        branchName: 'kiota/$(v1Branch)'
        targetClassName: "BaseGraphServiceClient"
        targetNamespace: "Microsoft.Graph"
        customArguments: "-b" # Enable the backing store
        cleanMetadataFolder: $(cleanOpenAPIFolderV1)
        languageSpecificSteps:
        - template: generation-templates/dotnet-kiota.yml
          parameters:
            repoName: msgraph-sdk-dotnet

- stage: stage_csharp_beta_kiota
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_beta_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_beta_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: csharp_beta_kiota
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'csharp'
        version: 'beta'
        repoName: 'msgraph-beta-sdk-dotnet'
        baseBranchName : 'master'
        branchName: 'kiota/$(betaBranch)'
        targetClassName: "BaseGraphServiceClient"
        targetNamespace: "Microsoft.Graph.Beta"
        customArguments: "-b" # Enable the backing store
        cleanMetadataFolder: $(cleanOpenAPIFolderBeta)
        languageSpecificSteps:
        - template: generation-templates/dotnet-kiota.yml
          parameters:
            repoName: msgraph-beta-sdk-dotnet

- stage: stage_go_v1
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_v1_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_v1_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: go_v1
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'go'
        version: ''
        repoName: 'msgraph-sdk-go'
        branchName: $(v1Branch)
        targetClassName: "GraphBaseServiceClient"
        targetNamespace: "github.com/microsoftgraph/msgraph-sdk-go/"
        customArguments: "-b -e '/me' -e '/me/**'" # Exclude me and Enable the backing store
        cleanMetadataFolder: $(cleanOpenAPIFolderV1)
        languageSpecificSteps:
        - template: generation-templates/go.yml
          parameters:
            repoName: msgraph-sdk-go

- stage: stage_go_beta
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_beta_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_beta_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: go_beta
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'go'
        version: 'beta'
        repoName: 'msgraph-beta-sdk-go'
        branchName: $(betaBranch)
        targetClassName: "GraphBaseServiceClient"
        targetNamespace: "github.com/microsoftgraph/msgraph-beta-sdk-go/"
        customArguments: "-b -e '/me' -e '/me/**'" # Exclude me and Enable the backing store
        cleanMetadataFolder: $(cleanOpenAPIFolderBeta)
        languageSpecificSteps:
        - template: generation-templates/go.yml
          parameters:
            repoName: msgraph-beta-sdk-go

- stage: stage_ruby_v1
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_v1_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_v1_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: ruby_v1
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'ruby'
        version: ''
        repoName: 'msgraph-sdk-ruby'
        branchName: $(v1Branch)
        targetClassName: "GraphBaseServiceClient"
        targetNamespace: "MicrosoftGraph"
        cleanMetadataFolder: $(cleanOpenAPIFolderV1)
        customArguments: "-e '/me' -e '/me/**'" # Exclude me
        languageSpecificSteps:
        - template: generation-templates/ruby.yml
          parameters:
            repoName: msgraph-sdk-ruby
            barrelFileName: microsoft_graph.rb

- stage: stage_ruby_beta
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_beta_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_beta_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: ruby_beta
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'ruby'
        version: 'beta'
        repoName: 'msgraph-beta-sdk-ruby'
        branchName: $(betaBranch)
        targetClassName: "GraphBaseServiceClient"
        targetNamespace: "MicrosoftGraphBeta"
        cleanMetadataFolder: $(cleanOpenAPIFolderBeta)
        customArguments: "-e '/me' -e '/me/**'" # Exclude me
        languageSpecificSteps:
        - template: generation-templates/ruby.yml
          parameters:
            repoName: msgraph-beta-sdk-ruby
            barrelFileName: microsoft_graph_beta.rb

- stage: stage_java_v1_kiota
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_v1_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_v1_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: java_v1_kiota
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'java'
        version: ''
        repoName: 'msgraph-sdk-java'
        baseBranchName: 'dev'
        branchName: '$(v1Branch)'
        targetClassName: "BaseGraphServiceClient"
        targetNamespace: "com.Microsoft.Graph"
        cleanMetadataFolder: $(cleanOpenAPIFolderV1)
        customArguments: "-b -e '/me' -e '/me/**'" # Exclude /me/** and enable backing store
        commitMessagePrefix: "feat(generation): update request builders and models"
        languageSpecificSteps:
        - template: generation-templates/java-kiota.yml
          parameters:
            repoName: msgraph-sdk-java
            namespacePath: com/microsoft/graph

- stage: stage_java_beta_kiota
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_beta_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_beta_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: java_beta_kiota
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'java'
        version: 'beta'
        repoName: 'msgraph-beta-sdk-java'
        baseBranchName: 'dev'
        branchName: '$(betaBranch)'
        targetClassName: "BaseGraphServiceClient"
        targetNamespace: "com.Microsoft.Graph.Beta"
        cleanMetadataFolder: $(cleanOpenAPIFolderBeta)
        customArguments: "-b -e '/me' -e '/me/**'" # Exclude /me/** and enable backing store
        commitMessagePrefix: "feat(generation): update request builders and models"
        languageSpecificSteps:
        - template: generation-templates/java-kiota.yml
          parameters:
            repoName: msgraph-beta-sdk-java
            namespacePath: com/microsoft/graph/beta


- stage: stage_php_beta_kiota
  dependsOn:
    - stage_build_and_publish_kiota
    - stage_beta_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_beta_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
    - job: php_beta_kiota
      steps:
        - template: generation-templates/language-generation-kiota.yml
          parameters:
            language: 'php'
            version: 'beta'
            repoName: 'msgraph-beta-sdk-php'
            branchName: 'kiota/$(betaBranch)'
            targetClassName: "BaseGraphClient"
            targetNamespace: 'Microsoft\\Graph\\Beta\\Generated'
            baseBranchName: 'main'
            cleanMetadataFolder: $(cleanOpenAPIFolderBeta)
            languageSpecificSteps:
              - template: generation-templates/php-kiota.yml
                parameters:
                  repoName: msgraph-beta-sdk-php
            customArguments: "-b -e '/me' -e '/me/**'" # Exclude me and Enable the backing store

- stage: stage_php_v1_kiota
  dependsOn:
    - stage_build_and_publish_kiota
    - stage_v1_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_v1_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
    - job: php_v1_kiota
      steps:
        - template: generation-templates/language-generation-kiota.yml
          parameters:
            language: 'php'
            version: ''
            repoName: 'msgraph-sdk-php'
            branchName: 'kiota/$(v1Branch)'
            targetClassName: "BaseGraphClient"
            targetNamespace: 'Microsoft\\Graph\\Generated'
            baseBranchName: 'main'
            cleanMetadataFolder: $(cleanOpenAPIFolderV1)
            languageSpecificSteps:
              - template: generation-templates/php-kiota.yml
                parameters:
                  repoName: msgraph-sdk-php
            customArguments: "-b -e '/me' -e '/me/**'" # Exclude me and Enable the backing store

- stage: stage_typescript_v1
  dependsOn:
  - stage_build_and_publish_typewriter
  - stage_v1_metadata
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_typewriter.result, 'Succeeded'),
      in(dependencies.stage_v1_metadata.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: typescript_v1
    steps:
    - template: generation-templates/language-generation.yml
      parameters:
        language: 'TypeScript'
        version: ''
        repoName: 'msgraph-typescript-typings'
        branchName: $(v1Branch)
        cleanMetadataFile: $(cleanMetadataFileV1)
        cleanMetadataFolder: $(cleanMetadataFolderV1)
        languageSpecificSteps:
        - template: generation-templates/typescript.yml
          parameters:
            repoName: 'msgraph-typescript-typings'

- stage: stage_typescript_beta
  dependsOn:
  - stage_build_and_publish_typewriter
  - stage_beta_metadata
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_typewriter.result, 'Succeeded'),
      in(dependencies.stage_beta_metadata.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: typescript_beta
    steps:
    - template: generation-templates/language-generation.yml
      parameters:
        language: 'TypeScript'
        version: 'beta'
        repoName: 'msgraph-beta-typescript-typings'
        branchName: $(betaBranch)
        cleanMetadataFile: $(cleanMetadataFileBeta)
        cleanMetadataFolder: $(cleanMetadataFolderBeta)
        languageSpecificSteps:
        - template: generation-templates/typescript.yml
          parameters:
            repoName: 'msgraph-beta-typescript-typings'

- stage: stage_typescript_sdk_v1
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_v1_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_v1_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: typescript_sdk_v1
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'typescript'
        version: ''
        repoName: 'msgraph-sdk-typescript'
        branchName: $(v1Branch)
        targetClassName: "GraphBaseServiceClient"
        targetNamespace: "github.com/microsoftgraph/msgraph-sdk-typescript/"
        customArguments: "-b -e '/me' -e '/me/**'" # Exclude me and enable backing store
        cleanMetadataFolder: $(cleanOpenAPIFolderV1)
        languageSpecificSteps:
        - template: generation-templates/typescript-sdk.yml
          parameters:
            repoName: msgraph-sdk-typescript
            packageName: '@microsoft/msgraph-sdk'

- stage: stage_typescript_sdk_beta
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_beta_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_beta_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: typescript_sdk_beta
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'typescript'
        version: 'beta'
        repoName: 'msgraph-beta-sdk-typescript'
        branchName: $(betaBranch)
        targetClassName: "GraphBetaBaseServiceClient"
        targetNamespace: "github.com/microsoftgraph/msgraph-sdk-typescript/"
        customArguments: "-b -e '/me' -e '/me/**'" # Exclude me and enable backing store
        cleanMetadataFolder: $(cleanOpenAPIFolderBeta)
        languageSpecificSteps:
        - template: generation-templates/typescript-sdk.yml
          parameters:
            repoName: msgraph-beta-sdk-typescript
            packageName: '@microsoft/msgraph-beta-sdk'

- stage: stage_python_v1
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_v1_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_v1_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: python_v1
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'python'
        version: ''
        repoName: 'msgraph-sdk-python'
        branchName: $(v1Branch)
        targetClassName: "BaseGraphServiceClient"
        targetNamespace: "msgraph.generated"
        customArguments: "-b -e '/me' -e '/me/**'" # Enable backing store, Exclude me
        cleanMetadataFolder: $(cleanOpenAPIFolderV1)
        languageSpecificSteps:
        - template: generation-templates/python.yml
          parameters:
            repoName: msgraph-sdk-python
            baseDirectory: msgraph

- stage: stage_python_beta
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_beta_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_beta_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: python_beta
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'python'
        version: 'beta'
        repoName: 'msgraph-beta-sdk-python'
        branchName: $(betaBranch)
        targetClassName: "BaseGraphServiceClient"
        targetNamespace: "msgraph_beta.generated"
        customArguments: "-b -e '/me' -e '/me/**'" # Enable backing store, Exclude me
        cleanMetadataFolder: $(cleanOpenAPIFolderBeta)
        languageSpecificSteps:
        - template: generation-templates/python.yml
          parameters:
            repoName: msgraph-beta-sdk-python
            baseDirectory: msgraph_beta

- stage: stage_cli_v1_kiota
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_v1_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_v1_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: cli_v1_kiota
    timeoutInMinutes: 60
    pool:
      name: 1es-ubuntu-latest-ado-cli-mem
      os: linux
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'cli'
        version: ''
        repoName: 'msgraph-cli'
        baseBranchName : 'main'
        branchName: 'kiota/$(v1Branch)'
        targetClassName: "GraphClient"
        targetNamespace: "ApiSdk"
        customArguments: "-e '/me' -e '/me/**'"
        cleanMetadataFolder: $(cleanOpenAPIFolderV1)
        commitMessagePrefix: "feat(generation): update request builders and models"
        languageSpecificSteps:
        - template: generation-templates/cli-kiota.yml
          parameters:
            repoName: msgraph-cli
            projectFile: src/msgraph-cli.csproj

- stage: stage_cli_beta_kiota
  dependsOn:
  - stage_build_and_publish_kiota
  - stage_beta_openapi
  condition: |
    and
    (
      eq(dependencies.stage_build_and_publish_kiota.result, 'Succeeded'),
      in(dependencies.stage_beta_openapi.result, 'Succeeded', 'Skipped')
    )
  jobs:
  - job: cli_beta_kiota
    timeoutInMinutes: 60
    pool:
      name: 1es-ubuntu-latest-ado-cli-mem
      os: linux
    steps:
    - template: generation-templates/language-generation-kiota.yml
      parameters:
        language: 'cli'
        version: ''
        repoName: 'msgraph-beta-cli'
        baseBranchName : 'main'
        branchName: 'kiota/$(betaBranch)'
        targetClassName: "GraphClient"
        targetNamespace: "ApiSdk"
        customArguments: "-e '/me' -e '/me/**'"
        cleanMetadataFolder: $(cleanOpenAPIFolderBeta)
        commitMessagePrefix: "feat(generation): update request builders and models"
        languageSpecificSteps:
        - template: generation-templates/cli-kiota.yml
          parameters:
            repoName: msgraph-beta-cli
            projectFile: src/msgraph-beta-cli.csproj

# - stage: stage_objc_v1
#   dependsOn:
#   - stage_build_and_publish_typewriter
#   - stage_v1_metadata
#   condition: |
#     and
#     (
#       eq(dependencies.stage_build_and_publish_typewriter.result, 'Succeeded'),
#       in(dependencies.stage_v1_metadata.result, 'Succeeded', 'Skipped')
#     )
#   jobs:
#   - job: objc_v1
#     steps:
#     - template: generation-templates/language-generation.yml
#       parameters:
#         language: 'ObjC'
#         version: ''
#         repoName: 'msgraph-sdk-objc-models'
#         branchName: $(v1Branch)
#         cleanMetadataFile: $(cleanMetadataFileV1)
#         cleanMetadataFolder: $(cleanMetadataFolderV1)
#         languageSpecificSteps:
#         - template: generation-templates/objc.yml

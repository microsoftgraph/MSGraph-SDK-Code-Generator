# designed to have a single run (single output directory)
parameters:
- name: targetNamespace
  type: string

- name: targetClassName
  type: string

- name: language
  type: string

- name: version
  type: string

- name: repoName
  type: string

- name: branchName
  type: string

- name: languageSpecificSteps
  type: stepList
  default:
  - pwsh: |
      Write-Error "No language specific step is provided"

- name: cleanMetadataFolder
  type: string

- name: baseBranchName
  type: string
  default: ''

- name: generatePullRequest
  default: true
  type: boolean
  displayName: Generate PR after publish changes?

- name: customArguments
  type: string
  default: ''

- name: commitMessagePrefix
  type: string
  default: ''

- name: exportDom
  type: boolean
  default: true

- name: pathExclusionArguments
  type: string
  default: "-e '/copilot' -e '/copilot/**'"

steps:
- template: set-up-for-generation-kiota.yml
  parameters:
    cleanMetadataFolder: ${{ parameters.cleanMetadataFolder }}
    downloadSteps:
    - template: download-kiota.yml

- checkout: ${{ parameters.repoName }}
  displayName: 'checkout ${{ parameters.repoName }}'
  fetchDepth: 1
  persistCredentials: true

# need this for the shared scripts (maybe we should move them to msgraph-metadata)
# no need for recursive, just scripts from the main repo
- checkout: self
  displayName: 'checkout generator'
  fetchDepth: 1
  persistCredentials: true

- pwsh: '$(scriptsDirectory)/checkout-custom-base-branch.ps1'
  displayName: 'Checking out custom base branch ${{ parameters.baseBranchName }}'
  env:
    RepoDirectory: $(Build.SourcesDirectory)/${{ parameters.repoName }}
    BranchName: ${{ parameters.baseBranchName }}
  workingDirectory: ${{ parameters.repoName }}
  condition: ne( '${{ parameters.baseBranchName }}' , '')

- pwsh: '$(scriptsDirectory)/create-branch.ps1'
  displayName: 'Create a branch in ${{ parameters.repoName }}'
  env:
    RepoDirectory: $(Build.SourcesDirectory)/${{ parameters.repoName }}
    BranchName: ${{ parameters.branchName }}
  workingDirectory: ${{ parameters.repoName }}

- bash: '$(kiotaDirectory)/kiota generate --openapi $(Build.SourcesDirectory)/msgraph-metadata/${{ parameters.cleanMetadataFolder }}/openapi.yaml --language ${{ parameters.language }} -o $(kiotaDirectory)/output -n ${{ parameters.targetNamespace }} -c ${{ parameters.targetClassName }} ${{ parameters.customArguments }} ${{ parameters.pathExclusionArguments }}'
  displayName: 'Run Kiota for ${{ parameters.language }} ${{ parameters.version }}'
  env:
    KIOTA_GENERATION:EXPORTPUBLICAPI: ${{ parameters.exportDom }}

- ${{ parameters.languageSpecificSteps }}

- pwsh: '$(scriptsDirectory)/git-push-files.ps1'
  displayName: 'Git: push generated files'
  env:
    BranchName: ${{ parameters.branchName }}
    PublishChanges: $(publishChanges)
    OverrideSkipCI: $(overrideSkipCI)
    CommitMessagePrefix: ${{ parameters.commitMessagePrefix }}
  workingDirectory: ${{ parameters.repoName }}

- task: AzureKeyVault@2
  displayName: "Azure Key Vault: Get Secrets"
  inputs:
    azureSubscription: "Federated AKV Managed Identity Connection"
    KeyVaultName: akv-prod-eastus
    SecretsFilter: "microsoft-graph-devx-bot-appid,microsoft-graph-devx-bot-privatekey"

- pwsh: '$(scriptsDirectory)/create-pull-request.ps1'
  displayName: 'Create Pull Request for the generated build for ${{ parameters.repoName }}'
  env:
    BaseBranch: ${{ parameters.baseBranchName}}
    GeneratePullRequest: ${{ parameters.generatePullRequest}}
    GhAppId: $(microsoft-graph-devx-bot-appid)
    GhAppKey: $(microsoft-graph-devx-bot-privatekey)
    OverrideSkipCI: $(overrideSkipCI)
    RepoName: ${{ parameters.repoName }}
    ScriptsDirectory: $(scriptsDirectory)
    Version: ${{ parameters.version }}
  workingDirectory: ${{ parameters.repoName }}

// Template Source: IBaseEntityWithReferenceRequest.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.models.extensions.EntityType3;
import com.microsoft.graph.models.extensions.Recipient;
import com.microsoft.graph2.callrecords.models.extensions.Session;
import com.microsoft.graph.models.extensions.Endpoint;
import java.util.Arrays;
import java.util.EnumSet;

import com.microsoft.graph.models.extensions.EntityType3;
import com.microsoft.graph.http.IHttpRequest;
import com.microsoft.graph.serializer.IJsonBackedObject;


// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The interface for the Entity Type3With Reference Request.
 */
public interface IEntityType3WithReferenceRequest extends IHttpRequest {

    void post(final EntityType3 newEntityType3, final IJsonBackedObject payload, final ICallback<? super EntityType3> callback);

    EntityType3 post(final EntityType3 newEntityType3, final IJsonBackedObject payload) throws ClientException;

    void get(final ICallback<? super EntityType3> callback);

    EntityType3 get() throws ClientException;

	void delete(final ICallback<? super EntityType3> callback);

	void delete() throws ClientException;

	void patch(final EntityType3 sourceEntityType3, final ICallback<? super EntityType3> callback);

	EntityType3 patch(final EntityType3 sourceEntityType3) throws ClientException;

    IEntityType3WithReferenceRequest select(final String value);

    IEntityType3WithReferenceRequest expand(final String value);

}

// Template Source: BaseClient.java.tt
// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.requests.extensions;

import com.microsoft.graph.http.IRequestBuilder;
import com.microsoft.graph.core.ClientException;
import com.microsoft.graph.concurrency.ICallback;
import com.microsoft.graph.requests.extensions.IEntityType3CollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.IEntityType3RequestBuilder;
import com.microsoft.graph.requests.extensions.EntityType3CollectionRequestBuilder;
import com.microsoft.graph.requests.extensions.EntityType3RequestBuilder;
import com.microsoft.graph.requests.extensions.ISingletonEntity1RequestBuilder;
import com.microsoft.graph.requests.extensions.SingletonEntity1RequestBuilder;
import com.microsoft.graph.requests.extensions.ISingletonEntity2RequestBuilder;
import com.microsoft.graph.requests.extensions.SingletonEntity2RequestBuilder;
import com.microsoft.graph2.callrecords.requests.extensions.ISingletonEntity1RequestBuilder;
import com.microsoft.graph2.callrecords.requests.extensions.SingletonEntity1RequestBuilder;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.IBaseGraphServiceClient;
import com.microsoft.graph.core.BaseClient;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Base Graph Service Client.
 */
public class BaseGraphServiceClient extends BaseClient implements IBaseGraphServiceClient {

    /**
     * The default endpoint for the Microsoft Graph Service
     */
    public static final String DEFAULT_GRAPH_ENDPOINT = "https://graph.microsoft.com/v1.0";

    /**
     * The current endpoint
     */
    private String endpoint;

    @Override
    public String getServiceRoot() {
        if (endpoint == null) {
            endpoint = DEFAULT_GRAPH_ENDPOINT;
        }
        return endpoint;
    }

    @Override
    public void setServiceRoot(String value) {
        endpoint = value;
    }

    /**
     * Gets the collection of TestTypes objects
     *
     * @return the request builder for the collection of TestTypes objects
     */
    public IEntityType3CollectionRequestBuilder testTypes() {
        return new EntityType3CollectionRequestBuilder(getServiceRoot() + "/testTypes", this, null);
    }

    /**
     * Gets a single TestTypes
     *
     * @param id the id of the TestTypes to retrieve
     * @return the request builder for the TestTypes object
     */
    public IEntityType3RequestBuilder testTypes(final String id) {
        return new EntityType3RequestBuilder(getServiceRoot() + "/testTypes/" + id, this, null);
    }

    /**
     * Gets the GraphServiceRequestBuilder
     *
     * @return the SingletonEntity1
     */
    public ISingletonEntity1RequestBuilder singletonProperty1() {
        return new SingletonEntity1RequestBuilder(getServiceRoot() + "/singletonProperty1", this, null);
    }

    /**
     * Gets the GraphServiceRequestBuilder
     *
     * @return the SingletonEntity2
     */
    public ISingletonEntity2RequestBuilder singletonProperty2() {
        return new SingletonEntity2RequestBuilder(getServiceRoot() + "/singletonProperty2", this, null);
    }

    /**
     * Gets the GraphServiceRequestBuilder
     *
     * @return the SingletonEntity1
     */
    public ISingletonEntity1RequestBuilder singletonProperty3() {
        return new SingletonEntity1RequestBuilder(getServiceRoot() + "/singletonProperty3", this, null);
    }
}

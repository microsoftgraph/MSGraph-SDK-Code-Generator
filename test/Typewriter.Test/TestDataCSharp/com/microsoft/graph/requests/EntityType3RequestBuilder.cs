// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type EntityType3RequestBuilder.
    /// </summary>
    public partial class EntityType3RequestBuilder : EntityRequestBuilder, IEntityType3RequestBuilder
    {

        /// <summary>
        /// Constructs a new EntityType3RequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public EntityType3RequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IEntityType3Request Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IEntityType3Request Request(IEnumerable<Option> options)
        {
            return new EntityType3Request(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for EntityType3Forward.
        /// </summary>
        /// <returns>The <see cref="IEntityType3ForwardRequestBuilder"/>.</returns>
        public IEntityType3ForwardRequestBuilder Forward(
            IEnumerable<Recipient> ToRecipients,
            Recipient SingleRecipient,
            IEnumerable<Microsoft.Graph2.CallRecords.Session> MultipleSessions,
            Microsoft.Graph2.CallRecords.Session SingleSession,
            string Comment = null)
        {
            return new EntityType3ForwardRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.forward"),
                this.Client,
                ToRecipients,
                SingleRecipient,
                MultipleSessions,
                SingleSession,
                Comment);
        }

        /// <summary>
        /// Gets the request builder for EntityType3ActOnEntityType3.
        /// </summary>
        /// <returns>The <see cref="IEntityType3ActOnEntityType3RequestBuilder"/>.</returns>
        public IEntityType3ActOnEntityType3RequestBuilder ActOnEntityType3(
            IEnumerable<string> Name)
        {
            return new EntityType3ActOnEntityType3RequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.ActOnEntityType3"),
                this.Client,
                Name);
        }
    
    }
}

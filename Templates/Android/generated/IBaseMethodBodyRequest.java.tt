<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#
    var baseClass = "BaseRequest";
    var typeRequest = TypeRequest(c);
    var iTypeRequest = ITypeRequest(c);
    var baseTypeRequest = BaseTypeRequest(c);
    var iBaseTypeRequest = IBaseTypeRequest(c);
    var returnType = ReturnType(c);

    if (c.AsOdcmMethod().IsCollection)
    {
        baseClass = "BaseCollectionRequest";
        typeRequest = TypeCollectionRequest(c);
        iTypeRequest = ITypeCollectionRequest(c);
        baseTypeRequest = BaseTypeCollectionRequest(c);
        iBaseTypeRequest = IBaseTypeCollectionRequest(c);
    }
#>
<#host.TemplateName = iBaseTypeRequest;#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

import com.google.gson.JsonObject;
import com.google.gson.annotations.*;

<#=CreateInterfaceDef(iBaseTypeRequest)#>

    void post(final ICallback<<#=ReturnType(c)#>> callback);

    <#=ReturnType(c)#> post() throws ClientException;

<# if (c.GetFeatures().CanSelect) { #>
    /**
     * Sets the select clause for the request
     *
     * @param value The select clause
     * @return The updated request
     */
    <#=iTypeRequest#> select(final String value) ;

<# } #>
<# if (c.GetFeatures().CanUseTop) { #>
    /**
     * Sets the top value for the request
     *
     * @param value The max number of items to return
     * @return The updated request
     */
    <#=iTypeRequest#> top(final int value);

<# } #>
<# if (c.GetFeatures().CanExpand) { #>
    /**
     * Sets the expand clause for the request
     *
     * @param value The expand clause
     * @return The updated request
     */
    <#=iTypeRequest#> expand(final String value);

<# } #>
}

<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#host.TemplateName = IBaseTypeWithReferencesRequest(c);#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

<#=CreateInterfaceDef(IBaseTypeWithReferencesRequest(c), "IHttpRequest")#>

    void post(final <#=TypeName(c)#> new<#=TypeName(c)#>, final IJsonBackedObject payload, final ICallback<<#=TypeName(c)#>> callback);

    <#=TypeName(c)#> post(final <#=TypeName(c)#> new<#=TypeName(c)#>, final IJsonBackedObject payload) throws ClientException;

    void get(final ICallback<<#=TypeName(c)#>> callback);

    <#=TypeName(c)#> get() throws ClientException;

<# if (c.GetFeatures().CanSelect) { #>
    <#=IBaseTypeWithReferencesRequest(c)#> select(final String value);

<# } #>
<# if (c.GetFeatures().CanExpand) { #>
    <#=IBaseTypeWithReferencesRequest(c)#> expand(final String value);

<# } #>
}

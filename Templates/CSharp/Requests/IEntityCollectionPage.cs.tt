<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedCSharp.template.tt"#>
<#

var prop = host.CurrentType.AsOdcmProperty();
var innerEntity = prop.Projection.Type;
var innerEntityType = innerEntity is OdcmPrimitiveType ? innerEntity.GetTypeString() : innerEntity.Name.ToCheckedCase();
if (innerEntityType.EndsWith("Request"))
	{
		innerEntityType = String.Concat(innerEntityType, "Object");
	}

var entityCollectionRequest = string.Concat(prop.Class.Name.ToCheckedCase(), prop.Name.ToCheckedCase(), "CollectionRequest");
var entityCollectionPage = string.Concat(prop.Class.Name.ToCheckedCase(), prop.Name.ToCheckedCase(), "CollectionPage");

// Check if Microsoft.Graph should be imported for Options object when generating outside the Microsoft.Graph namespace.
var shouldImportGraph = false;
if(prop.Class.AsOdcmClass().Namespace.GetNamespaceName() != "Microsoft.Graph") {
    shouldImportGraph = true;
}
#>

namespace <#=prop.Class.AsOdcmClass().Namespace.GetNamespaceName()#>
{
    using System;
    using Newtonsoft.Json;
<#
if(shouldImportGraph){
#>
    using Microsoft.Graph;
<#
}
#>

    /// <summary>
    /// The interface I<#=entityCollectionPage#>.
    /// </summary>
    [JsonConverter(typeof(InterfaceConverter<<#=entityCollectionPage#>>))]
    public interface I<#=entityCollectionPage#> : ICollectionPage<<#=innerEntityType#>>
    {
        /// <summary>
        /// Gets the next page <see cref="I<#=entityCollectionRequest#>"/> instance.
        /// </summary>
        I<#=entityCollectionRequest#> NextPageRequest { get; }

        /// <summary>
        /// Initializes the NextPageRequest property.
        /// </summary>
        void InitializeNextPageRequest(IBaseClient client, string nextPageLinkString);
    }
}

<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedCSharp.template.tt"#>
<#

var method = host.CurrentType.AsOdcmMethod();
var entityName = method.Class.Name.ToCheckedCase();
var requestType = entityName + method.Name.Substring(method.Name.IndexOf('.') + 1).ToCheckedCase() + "Request";
var requestBuilderType = requestType + "Builder";
var namespaceName = method.Namespace.GetNamespaceName();
#>

namespace <#=namespaceName#>
{
    using System;
    using System.Collections.Generic;
    using System.IO;
<# if (!this.IsGraphNamespace(namespaceName)) { #>
    using Microsoft.Graph;
<# } #>

    /// <summary>
    /// The interface I<#=requestBuilderType#>.
    /// </summary>
    public partial interface I<#=requestBuilderType#>
    {
        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        I<#=requestType#> Request(IEnumerable<Option> options = null);
    }
}

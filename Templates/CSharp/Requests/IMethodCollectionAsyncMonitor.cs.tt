<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedCSharp.template.tt"#>
<#

var method = host.CurrentType.AsOdcmMethod();
var entityName = method.Class.Name.ToCheckedCase();
var methodName = method.Name.Substring(method.Name.IndexOf('.') + 1).ToCheckedCase();
var monitorType = entityName + methodName + "AsyncMonitor";
var namespaceName = method.Namespace.GetNamespaceName();

var returnType = "I" + entityName + methodName + "CollectionPage";

#>

namespace <#=namespaceName#>
{
    using System;
    using System.Threading;
<# if (!this.IsGraphNamespace(namespaceName)) { #>
    using Microsoft.Graph;
<# } #>

    /// <summary>
    /// The interface I<#=monitorType#>.
    /// </summary>
    public partial interface I<#=monitorType#>
    {
        /// <summary>
        /// Polls until the async operation is complete and returns the resulting <#=returnType#>.
        /// </summary>
        System.Threading.Tasks.Task<<#=returnType#>> CompleteOperationAsync(IProgress<AsyncOperationStatus> progress, CancellationToken cancellationToken);
    }
}

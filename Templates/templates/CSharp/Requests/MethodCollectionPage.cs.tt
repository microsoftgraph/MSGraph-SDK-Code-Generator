<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedCSharp.template.tt"#>
<#

var method = host.CurrentType.AsOdcmMethod();
var @namespace = method.Namespace.GetNamespaceName();

var collectionPageTypeName = @namespace.GetCoreLibraryType("CollectionPage");
var iBaseClientTypeName = @namespace.GetCoreLibraryType("IBaseClient");

var returnType = method.ReturnType.GetTypeString(@namespace);

var responseNamePrefix = method.Class.Name.ToCheckedCase() + method.Name.Substring(method.Name.IndexOf('.') + 1).ToCheckedCase();
var nextRequestType = responseNamePrefix + "Request";
var entityCollectionPage = responseNamePrefix + "CollectionPage";

#>

namespace <#=@namespace#>
{
    /// <summary>
    /// The type <#=entityCollectionPage#>.
    /// </summary>
    public partial class <#=entityCollectionPage#> : <#=collectionPageTypeName#><<#=returnType#>>, I<#=entityCollectionPage#>
    {
        /// <summary>
        /// Gets the next page <see cref="I<#=nextRequestType#>"/> instance.
        /// </summary>
        public I<#=nextRequestType#> NextPageRequest { get; private set; }

        /// <summary>
        /// Initializes the NextPageRequest property.
        /// </summary>
        public void InitializeNextPageRequest(<#=iBaseClientTypeName#> client, string nextPageLinkString)
        {
            if (!string.IsNullOrEmpty(nextPageLinkString))
            {
                this.NextPageRequest = new <#=nextRequestType#>(
                    nextPageLinkString,
                    client,
                    null);
            }
        }
    }
}

<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedCSharp.template.tt"#>
<#

var method = host.CurrentType.AsOdcmMethod();
var @namespace = method.Namespace.GetNamespaceName();

var optionTypeName = @namespace.GetCoreLibraryType("Option");

var entityName = method.Class.Name.ToCheckedCase();
var requestType = entityName + method.Name.Substring(method.Name.IndexOf('.') + 1).ToCheckedCase() + "Request";
var requestBuilderType = requestType + "Builder";
#>

namespace <#=@namespace#>
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The interface I<#=requestBuilderType#>.
    /// </summary>
    public partial interface I<#=requestBuilderType#>
    {
        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        I<#=requestType#> Request(IEnumerable<<#=optionTypeName#>> options = null);
    }
}

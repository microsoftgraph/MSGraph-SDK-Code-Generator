<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedCSharp.template.tt"#>
<#

var prop = host.CurrentType.AsOdcmProperty();
var @namespace = prop.Class.AsOdcmClass().Namespace.GetNamespaceName();

var collectionPageTypeName = @namespace.GetCoreLibraryType("CollectionPage");
var iBaseClientTypeName = @namespace.GetCoreLibraryType("IBaseClient");

var innerEntity = prop.Projection.Type;
var innerEntityType = innerEntity.GetTypeString(@namespace);
var entityCollectionRequest = string.Concat(prop.Class.Name.ToCheckedCase(), prop.Name.ToCheckedCase(), "CollectionWithReferencesRequest");
var entityCollectionPage = string.Concat(prop.Class.Name.ToCheckedCase(), prop.Name.ToCheckedCase(), "CollectionWithReferencesPage");

#>

namespace <#=@namespace#>
{
    using System;

    /// <summary>
    /// The type <#=entityCollectionPage#>.
    /// </summary>
    public partial class <#=entityCollectionPage#> : <#=collectionPageTypeName#><<#=innerEntityType#>>, I<#=entityCollectionPage#>
    {
        /// <summary>
        /// Gets the next page <see cref="I<#=entityCollectionRequest#>"/> instance.
        /// </summary>
        public I<#=entityCollectionRequest#> NextPageRequest { get; private set; }

        /// <summary>
        /// Initializes the NextPageRequest property.
        /// </summary>
        public void InitializeNextPageRequest(<#=iBaseClientTypeName#> client, string nextPageLinkString)
        {
            if (!string.IsNullOrEmpty(nextPageLinkString))
            {
                this.NextPageRequest = new <#=entityCollectionRequest#>(
                    nextPageLinkString,
                    client,
                    null);
            }
        }
    }
}

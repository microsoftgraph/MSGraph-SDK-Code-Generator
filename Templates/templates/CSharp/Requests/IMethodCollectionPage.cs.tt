<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedCSharp.template.tt"#>
<#

var method = host.CurrentType.AsOdcmMethod();
var @namespace = method.Namespace.GetNamespaceName();

var interfaceConverterTypeName = @namespace.GetCoreLibraryType("InterfaceConverter");
var iCollectionPageTypeName = @namespace.GetCoreLibraryType("ICollectionPage");
var iBaseClientTypeName = @namespace.GetCoreLibraryType("IBaseClient");

var returnType = method.ReturnType.GetTypeString(@namespace);

var responseNamePrefix = method.Class.Name.ToCheckedCase() + method.Name.Substring(method.Name.IndexOf('.') + 1).ToCheckedCase();
var entityCollectionRequest = responseNamePrefix + "Request";
var entityCollectionPage = responseNamePrefix + "CollectionPage";

#>

namespace <#=@namespace#>
{
    using Newtonsoft.Json;

    /// <summary>
    /// The interface I<#=entityCollectionPage#>.
    /// </summary>
    [JsonConverter(typeof(<#=interfaceConverterTypeName#><<#=entityCollectionPage#>>))]
    public interface I<#=entityCollectionPage#> : <#=iCollectionPageTypeName#><<#=returnType#>>
    {
        /// <summary>
        /// Gets the next page <see cref="I<#=entityCollectionRequest#>"/> instance.
        /// </summary>
        I<#=entityCollectionRequest#> NextPageRequest { get; }

        /// <summary>
        /// Initializes the NextPageRequest property.
        /// </summary>
        void InitializeNextPageRequest(<#=iBaseClientTypeName#> client, string nextPageLinkString);
    }
}

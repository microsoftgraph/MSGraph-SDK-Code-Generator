<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedCSharp.template.tt"#>
<#

var prop = host.CurrentType.AsOdcmProperty();
var @namespace = prop.Class.AsOdcmClass().Namespace.GetNamespaceName();

var interfaceConverterTypeName = @namespace.GetCoreLibraryType("InterfaceConverter");
var iCollectionPageTypeName = @namespace.GetCoreLibraryType("ICollectionPage");
var iBaseClientTypeName = @namespace.GetCoreLibraryType("IBaseClient");

var innerEntityType = prop.GetTypeString(@namespace);
var entityCollectionRequest = this.GetPropertyCollectionWithReferencesRequestName(prop);
var entityCollectionPage = string.Concat(this.GetEntityNameString(prop.Class), prop.Name.ToCheckedCase(), "CollectionWithReferencesPage");

#>

namespace <#=@namespace#>
{
    using System;

    using Newtonsoft.Json;

    /// <summary>
    /// The interface I<#=entityCollectionPage#>.
    /// </summary>
    [JsonConverter(typeof(<#=interfaceConverterTypeName#><<#=entityCollectionPage#>>))]
    public interface I<#=entityCollectionPage#> : <#=iCollectionPageTypeName#><<#=innerEntityType#>>
    {
        /// <summary>
        /// Gets the next page <see cref="I<#=entityCollectionRequest#>"/> instance.
        /// </summary>
        I<#=entityCollectionRequest#> NextPageRequest { get; }

        /// <summary>
        /// Initializes the NextPageRequest property.
        /// </summary>
        void InitializeNextPageRequest(<#=iBaseClientTypeName#> client, string nextPageLinkString);
    }
}

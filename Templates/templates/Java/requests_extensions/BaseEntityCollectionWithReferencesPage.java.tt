<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseJavaModel.template.tt"#>
<#@ output extension="\\" #>
<#host.TemplateName = c.TypeCollectionWithReferencesPage();#>
<#=writer.WriteHeader()#>
<#=host.CreatePackageDef()#>

<# var mainNamespace = host.CurrentNamespace(); #>
import <#=mainNamespace#>.<#=TypeHelperJava.GetPrefixForRequests()#>.<#=c.ITypeCollectionRequestBuilder()#>;
import <#=mainNamespace#>.<#=TypeHelperJava.GetPrefixForRequests()#>.<#=c.ITypeCollectionWithReferencesPage()#>;
import <#=mainNamespace#>.<#=TypeHelperJava.GetPrefixForRequests()#>.<#=c.TypeCollectionResponse()#>;
import <#=mainNamespace#>.<#=c.GetPackagePrefix()#>.<#=c.TypeName()#>;
import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
<# var importNamespace = host.CurrentModel.GetNamespace().AddPrefix(); #>
import <#=importNamespace#>.http.BaseCollectionPage;

<#=TypeHelperJava.CreateClassDef(c.TypeCollectionWithReferencesPage(), "BaseCollectionPage" + c.CollectionPageWithReferencesGeneric(), c.ITypeCollectionWithReferencesPage())#>

    /**
     * A collection page for <#=c.TypeName()#>
     *
     * @param response the serialized <#=c.TypeCollectionResponse()#> from the service
     * @param builder  the request builder for the next collection page
     */
    public <#=c.TypeCollectionWithReferencesPage()#>(final <#=c.TypeCollectionResponse()#> response, final <#=c.ITypeCollectionWithReferencesRequestBuilder()#> builder) {
        super(response.value, builder, response.additionalDataManager());
    }
}

<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseJavaModel.template.tt"#>
<#@ output extension="\\" #>
<#host.TemplateName = c.TypeCollectionPage();#>
<#=writer.WriteHeader()#>
<#=host.CreatePackageDef()#>
<# 
	/** 
	* Manual check for deltaLink
	* This allows for a user to get the delta link URL with which 
	* to make future delta query calls to the service. Since it is 
	* not surfaced in the additionalDataManager, we add it manually
	* to the object for easy access.
	*/
	var deltaPage = false;
	if (c.Name == "delta") {
		deltaPage = true;
	}
#>

<# var mainNamespace = host.CurrentNamespace(); #>
import <#=mainNamespace#>.<#=TypeHelperJava.GetPrefixForRequests()#>.<#=c.ITypeCollectionRequestBuilder()#>;
import <#=mainNamespace#>.<#=TypeHelperJava.GetPrefixForRequests()#>.<#=c.TypeCollectionPage()#>;
import <#=mainNamespace#>.<#=TypeHelperJava.GetPrefixForRequests()#>.<#=c.TypeCollectionResponse()#>;
import com.google.gson.JsonObject;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.Expose;
<# var importNamespace = host.CurrentModel.GetNamespace().AddPrefix(); #>
import <#=importNamespace#>.http.IBaseCollectionPage;
import <#=importNamespace#>.http.BaseCollectionPage;

<#=TypeHelperJava.CreateClassDef(c.TypeCollectionPage(), "BaseCollectionPage" + c.CollectionPageGeneric(), c.ITypeCollectionPage())#>

<# if (deltaPage) { #>
    /**
     * The opaque link to query delta after the 
     * initial request
     */
    public String deltaLink;

<# } #>
    /**
     * A collection page for <#=(c as OdcmMethod).OdcmMethodReturnType()#>.
     *
     * @param response The serialized <#=c.TypeCollectionResponse()#> from the service
     * @param builder The request builder for the next collection page
     */
    public <#=c.TypeCollectionPage()#>(final <#=c.TypeCollectionResponse()#> response, final <#=c.ITypeCollectionRequestBuilder()#> builder) {
       super(response.value, builder, response.additionalDataManager());
<# if (deltaPage) { #>

        if (response.getRawObject().get("@odata.deltaLink") != null) {
            deltaLink = response.getRawObject().get("@odata.deltaLink").getAsString();
        } else {
            deltaLink = null;
        }
<# } #>
    }
<# if (deltaPage) { #>
    /**
     * The deltaLink to make future delta requests
     *
     * @return String The deltaLink URL
     */
    public String deltaLink() {
        return deltaLink;
    }
<# } #>
}

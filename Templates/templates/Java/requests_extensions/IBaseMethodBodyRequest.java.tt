<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseJavaModel.template.tt"#>
<#@ output extension="\\" #>
<#
    var baseClass = "BaseRequest";
    var typeRequest = c.TypeRequest();
    var iTypeRequest = c.ITypeRequest();
    var baseTypeRequest = c.TypeRequest();
    var iBaseTypeRequest = c.ITypeRequest();
    var returnType = c.ReturnType();

    if (c.AsOdcmMethod().IsCollection)
    {
        baseClass = "BaseCollectionRequest";
        typeRequest = c.TypeCollectionRequest();
        iTypeRequest = c.ITypeCollectionRequest();
        baseTypeRequest = c.TypeCollectionRequest();
        iBaseTypeRequest = c.ITypeCollectionRequest();
    }
#>
<#host.TemplateName = iBaseTypeRequest;#>
<#=writer.WriteHeader()#>
<#=host.CreatePackageDefForIBaseMethodBodyRequest()#>
<# var importNamespace = host.CurrentModel.GetNamespace().AddPrefix(); #>
import <#=importNamespace#>.concurrency.ICallback;
import <#=importNamespace#>.http.BaseCollectionRequest;
import <#=importNamespace#>.http.BaseRequest;
import <#=importNamespace#>.core.ClientException;
import <#=importNamespace#>.http.BaseCollectionRequest;
import <#=importNamespace#>.http.IHttpRequest;

<#=TypeHelperJava.CreateInterfaceDef(iBaseTypeRequest, "IHttpRequest")#>

    void post(final ICallback<? super <#=c.ReturnType()#>> callback);

    <#=c.ReturnType()#> post() throws ClientException;

<# if (c.GetFeatures().CanSelect) { #>
    /**
     * Sets the select clause for the request
     *
     * @param value the select clause
     * @return the updated request
     */
    <#=iTypeRequest#> select(final String value) ;

<# } #>
<# if (c.GetFeatures().CanUseTop) { #>
    /**
     * Sets the top value for the request
     *
     * @param value the max number of items to return
     * @return the updated request
     */
    <#=iTypeRequest#> top(final int value);

<# } #>
<# if (c.GetFeatures().CanExpand) { #>
    /**
     * Sets the expand clause for the request
     *
     * @param value the expand clause
     * @return the updated request
     */
    <#=iTypeRequest#> expand(final String value);

<# } #>
}

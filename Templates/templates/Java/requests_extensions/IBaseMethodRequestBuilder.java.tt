<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseJavaModel.template.tt"#>
<#@ output extension="\\" #>
<#host.TemplateName = c.ITypeRequestBuilder();#>
<#=writer.WriteHeader()#>
<#=host.CreatePackageDefIBaseMethodRequestBuilder()#>
<# var importNamespace = host.CurrentModel.GetNamespace().AddPrefix(); #>
import <#=importNamespace#>.http.IRequestBuilder;

<#=TypeHelperJava.CreateInterfaceDef(c.ITypeRequestBuilder(), "IRequestBuilder")#>

    /**
     * Creates the <#=c.ITypeRequest()#>
     *
     * @param requestOptions the options for the request
     * @return the <#=c.ITypeRequest()#> instance
     */
    <#=c.ITypeRequest()#> buildRequest(final com.microsoft.graph.options.Option... requestOptions);

    /**
     * Creates the <#=c.ITypeRequest()#> with specific options instead of the existing options
     *
     * @param requestOptions the options for the request
     * @return the <#=c.ITypeRequest()#> instance
     */
    <#=c.ITypeRequest()#> buildRequest(final java.util.List<? extends <#=importNamespace#>.options.Option> requestOptions);
<# 
var m = c as OdcmMethod;
if(m != null && m.IsComposable && m.ReturnType != null && m.ReturnType is OdcmClass) {
    foreach(var prop in m.ReturnType.AsOdcmClass().NavigationProperties(true))
    {
        var propName = prop.Name.ToUpperFirstChar();
		var sanitizedName = prop.Name.SanitizePropertyName();
        var propRequestBuilder = prop.TypeRequestBuilder();
        if (prop.IsCollection()) {
#>

    <#=prop.ITypeCollectionRequestBuilder()#> <#=sanitizedName.ToLowerFirstChar()#>();

    <#=prop.ITypeRequestBuilder()#> <#=prop.Name#>(final String id);
<#
        } else {
#>

    /**
     * Gets the request builder for <#=prop.TypeName()#>
     *
     * @return the <#=prop.ITypeRequestBuilder()#> instance
     */
    <#=prop.ITypeRequestBuilder()#> <#=sanitizedName.ToLowerFirstChar()#>();
<#
        }
    }
} #>
}

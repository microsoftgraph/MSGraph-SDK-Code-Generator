<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedObjC.template.tt"#>
<#
var entity = host.CurrentType.AsOdcmEnum();
var typeName = GetObjCTypeIdentifier(entity);
var valueTypeName = typeName + "Value";
#>

#include <Foundation/Foundation.h>

typedef NS_ENUM(NSInteger, <#=valueTypeName#>){

<#
foreach(var member in entity.Members.OrderBy(x => x.Value))
{
#>
	<#=GetObjCEnumMember(entity,member)#> = <#=member.Value#>,
<#
}
#>
    <#=typeName#>EndOfEnum
};

@interface <#=typeName#> : NSObject

<#
foreach (var member in entity.Members.OrderBy(x => x.Value))
{
#>
+(<#=typeName#>*) <#=member.Name.ToLowerFirstChar()#>;
<#
}
#>

+(<#=typeName#>*) UnknownEnumValue;

+(<#=typeName#>*) <#=entity.Name.ToLowerFirstChar()#>WithEnumValue:(<#=valueTypeName#>)val;
-(NSString*) ms_toString;

@property (nonatomic, readonly) <#=typeName#>Value enumValue;

@end


@interface NSString (<#=typeName#>)

- (<#=typeName#>*) to<#=typeName#>;

@end

<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedObjC.template.tt"#>
<#
var complexType = host.CurrentType.AsOdcmClass();
#>

#import "NSDate+MSSerialization.h"

#import "<#=writer.GetPrefix()#>ClientModels.h"

@interface <#=writer.GetStaticCodePrefix()#>Object()

@property (strong, nonatomic) NSMutableDictionary *dictionary;

@end

@interface <#=GetObjCTypeIdentifier(complexType)#>()
{
<#
foreach (var prop in complexType.Properties.Where(prop => GetObjCTypeIdentifier(prop)!="NSStream" ))
{
#>
    <#=GetObjCTypeForVarDeclaration(prop)#> _<#=GetObjCProperty(prop)#>;
<#
}
#>
}
@end

@implementation <#=GetObjCTypeIdentifier(complexType)#>

<#
foreach(var prop in complexType.Properties.Where(prop => GetObjCTypeIdentifier(prop)!="NSStream" ))
{
    PropertyGetterImplementation(prop);
    PropertySetterImplementation(prop);
}
#>
@end

<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedObjC.template.tt"#>
<#
var entity = host.CurrentType.AsOdcmClass();
var baseEntity = entity.Base;

IEnumerable<string> extraClasses = null;
#>
<#=writer.GetImportsClass(entity.Properties, extraClasses:extraClasses)#>

#import "<#=GetObjCTypeIdentifier(baseEntity)#>.h"

@interface <#=GetObjCTypeIdentifier(entity)#> : <#=GetObjCTypeIdentifier(baseEntity)#>

<#
if (baseEntity == null)
{
#>
  @property (nullable, nonatomic, setter=setODataType:, getter=oDataType) NSString *oDataType;
  @property (nullable, nonatomic, setter=setODataEtag:, getter=oDataEtag) NSString *oDataEtag;
<#
}

foreach(var prop in entity.Properties.Where(prop => GetObjCTypeIdentifier(prop)!="NSStream" ))
{
  #>
  <#=GeneratePropertyDeclarationLine(prop)#>
  <#
}

foreach (var prop in entity.Properties.Where(prop => prop.IsCollection && prop.LongDescriptionContains("enumerable")))
{
#>
- (<#=GetObjCTypeForVarDeclaration(prop,true)#>) <#=GetObjCProperty(prop)#>:(NSInteger)index;
<#
}

#>

@end

<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedObjC.template.tt"#>
<#

var className="";
var propName="";

if(host.CurrentType is OdcmProperty)
{
    var prop = host.CurrentType.AsOdcmProperty();
    className = writer.GetPrefix() + prop.Class.Name.ToUpperFirstChar();
    propName = className + prop.Name.ToUpperFirstChar() + ((prop.Projection.Type is OdcmMediaClass)?"Stream":"") + "Request";
}
else
{
    var clss = host.CurrentType.AsOdcmClass();
    className = writer.GetPrefix() + clss.Name.ToUpperFirstChar();
    propName = className  + "StreamRequest";
}

var uploadCompletionHandler = className + "UploadCompletionHandler";

#>
#import "<#=writer.GetPrefix()#>Models.h"
#import "<#=writer.GetPrefix()#>ODataEntities.h"
#import "<#=writer.GetStaticCodePrefix()#>URLSessionDownloadTask.h"
#import "<#=writer.GetStaticCodePrefix()#>URLSessionUploadTask.h"

@interface <#=writer.GetStaticCodePrefix()#>Request()

- (NSMutableURLRequest *)requestWithMethod:(NSString *)method
                                      body:(NSData *)body
                                   headers:(NSDictionary *)headers;

@end

@implementation <#=propName#>

- (NSMutableURLRequest *) download
{
    return [self requestWithMethod:@"GET"
                              body:nil
                           headers:nil];
}

- (<#=writer.GetStaticCodePrefix()#>URLSessionDownloadTask *) downloadWithCompletion:(<#=writer.GetStaticCodePrefix()#>DownloadCompletionHandler)completionHandler
{
    <#=writer.GetStaticCodePrefix()#>URLSessionDownloadTask *task = [[<#=writer.GetStaticCodePrefix()#>URLSessionDownloadTask alloc] initWithRequest:[self download]
                                                                                client:self.client
                                                                     completionHandler:completionHandler];
    [task execute];
    return task;
}

- (NSMutableURLRequest *) upload
{
    //when creating an upload task the body will be reset
    return [self requestWithMethod:@"PUT"
                              body:nil
                           headers:nil];
}

- (<#=writer.GetStaticCodePrefix()#>URLSessionUploadTask *) uploadFromData:(NSData *)data
                                 completion:(<#=uploadCompletionHandler#>)completionHandler
{
    <#=writer.GetStaticCodePrefix()#>URLSessionUploadTask *task = [self uploadTaskWithRequest:[self upload]
                                                      fromData:data
                                        odobjectWithDictionary:^(NSDictionary *response){
                                                return [[<#=className#> alloc] initWithDictionary:response];
                                        }
                                             completionHandler:completionHandler];
    [task execute];
    return task;

}

- (<#=writer.GetStaticCodePrefix()#>URLSessionUploadTask *) uploadFromFile:(NSURL *)fileURL
                                 completion:(<#=uploadCompletionHandler#>)completionHandler
{
    <#=writer.GetStaticCodePrefix()#>URLSessionUploadTask *task = [self uploadTaskWithRequest:[self upload]
                                                      fromFile:fileURL
                                        odobjectWithDictionary:^(NSDictionary *response){
                                                return [[<#=className#> alloc] initWithDictionary:response];
                                        }
                                             completionHandler:completionHandler];
    [task execute];
    return task;
}

@end
